# import User from "user.graphql"

type Comment {
    id: ID!
    description: String!
    createdAt: String!
    User: User!
    PostId: Int!
}

type Post {
    id: ID!
    title: String!
    description: String!
    createdAt: String!
    user: User!
    tags: [Tag]!
    category: Category!
    liker: [User!]!
}

type Category {
    id: ID!
    name: String!
}

type Tag {
    id: ID!
    name: String!
}

type Query {
    posts(first: Int, afterCursor: Int, ord: String, category_id: Int): [Post!]!
    post(id: ID!): Post
    user(id: ID!): User!
    categorys: [Category!]!
}

type Mutation {
    createToken(userId: String!, password: String!): User!
    signUpWithLocal(userId: String!, password: String!, nickname: String!, grant: USER_GRANT_ENUM!): User!

    createCategory(name: String!): Category!
    updateCategory(id: ID!, name: String!): Boolean!
    deleteCategory(id: ID!): Boolean!

    createPost(title: String!, description: String!, tags: String!, category_id: ID!): Post!
    updatePost(id: ID!, title: String!, description: String!, tags: String, category_id: ID): Boolean!
    deletePost(id: ID!): Boolean!

    createComment(id: ID!, description: String!): Comment!
    updateComment(id: ID!, description: String!): [Int]!
    deleteComment(id: ID!): Int!

    createRecomment(postId: ID!, id: ID!, description: String!): Comment!

    createLiked(postId: ID!): Int!
    deleteLiked(postId: ID!): Int!

    logout: User!
    login(userId: String!, password: String!): User!
}
